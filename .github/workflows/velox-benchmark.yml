name: Velox Benchmark

on:
  workflow_dispatch:
    inputs:
      repository: &repository
        description: 'Velox repository'
        type: string
        required: true
        default: 'facebookincubator/velox'
      velox_commit: &velox_commit
        description: 'Velox commit SHA or branch'
        type: string
        required: true
        default: 'main'
      benchmark_type:
        description: 'Benchmark type'
        type: choice
        required: true
        default: 'tpch'
        options:
          - tpch

  workflow_call:
    inputs:
      repository: *repository
      velox_commit: *velox_commit
      benchmark_type:
        description: 'Benchmark type'
        type: string
        required: false
        default: 'tpch'

jobs:
  velox-benchmark:
    runs-on: linux-amd64-gpu-l4-latest-1
    
    env:
      GH_TOKEN: ${{ secrets.GIST_REPO_READ_ORG_GITHUB_TOKEN }}
      
    steps:
      - name: Checkout velox-testing
        uses: actions/checkout@v4
        with:
          path: velox-testing

      - name: Setup Velox Testing and Velox
        uses: ./velox-testing/.github/actions/velox-setup
        with:
          repository: ${{ inputs.repository }}
          velox_commit: ${{ inputs.velox_commit }}

      - name: Setup sccache authentication
        run: |
          echo "=== Token Debug Info ==="
          if [[ -n "${{ secrets.GIST_REPO_READ_ORG_GITHUB_TOKEN }}" ]]; then
            echo "GIST_REPO_READ_ORG_GITHUB_TOKEN secret is available"
            echo "Token length: ${#GIST_REPO_READ_ORG_GITHUB_TOKEN}"
            echo "Token prefix: ${GIST_REPO_READ_ORG_GITHUB_TOKEN:0:10}..."
          else
            echo "ERROR: GIST_REPO_READ_ORG_GITHUB_TOKEN secret is NOT available"
            echo "Available secrets that start with 'G': ${{ toJSON(secrets) }}" | grep -o '"G[^"]*"' || echo "No secrets starting with G"
          fi
          echo "========================"
          
          pushd ${{ github.workspace }}/velox-testing/velox/scripts
          if ./setup_sccache_auth.sh --github-token "${{ secrets.GIST_REPO_READ_ORG_GITHUB_TOKEN }}" "$HOME/.sccache-auth"; then
            echo "SCCACHE_ENABLED=true" >> $GITHUB_ENV
            echo "sccache authentication successful"
          else
            echo "SCCACHE_ENABLED=false" >> $GITHUB_ENV
            echo "sccache authentication failed - building without sccache"
            echo "Note: For sccache to work in CI, you may need a personal access token"
            echo "with broader permissions than the default github.token"
          fi
          popd
        env:
          GIST_REPO_READ_ORG_GITHUB_TOKEN: ${{ secrets.GIST_REPO_READ_ORG_GITHUB_TOKEN }}

      - name: "Build Velox GPU with Benchmarks and sccache (SHA: ${{ env.VELOX_COMMIT_SHA }})"
        run: |
          cd ${{ github.workspace }}/velox-testing/velox/scripts
          TREAT_WARNINGS_AS_ERRORS=0 ./build_velox.sh -j $(nproc) --all-cuda-archs --gpu --benchmarks true --sccache --sccache-auth-dir "$HOME/.sccache-auth" --log build_velox_gpu.log

      - name: Upload velox_gpu_build_log as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: velox_gpu_build_log
          path: ${{ github.workspace }}/velox-testing/velox/scripts/build_velox_gpu.log

      - name: Run ${{ inputs.benchmark_type }} Velox GPU Benchmarks
        run: |
          DATA_DIR=${{ github.workspace }}/velox-testing/presto/testing/integration_tests/data/${{ inputs.benchmark_type }}
          pushd velox-testing/velox/scripts
          ./benchmark_velox.sh -b ${{ inputs.benchmark_type }} --data-dir $DATA_DIR -d gpu -p false -o ${{ github.workspace }}/velox-testing/benchmark-results
          popd

      - name: Upload benchmark results as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: "Velox_GPU_benchmark_results_${{ inputs.benchmark_type }}_${{ env.VELOX_COMMIT_SHA }}"
          path: ${{ github.workspace }}/velox-testing/benchmark-results
          if-no-files-found: error
          retention-days: 14
