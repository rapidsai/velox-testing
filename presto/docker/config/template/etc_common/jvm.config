# Enable JVM server mode for better JIT optimization on long-running servers.
-server
# Maximum Java heap size; templated to match container memory.
-Xmx{{ .HeapSizeGb }}G
# Initial Java heap size; equal to max to avoid heap resizing pauses.
-Xms{{ .HeapSizeGb }}G
# Use the G1 garbage collector for predictable pause times.
-XX:+UseG1GC
# Tune G1 region size to balance GC throughput and fragmentation.
-XX:G1HeapRegionSize=32M
# Abort when GC overhead becomes excessive to prevent hangs.
-XX:+UseGCOverheadLimit
# Make System.gc() invoke concurrent collections to reduce pauses.
-XX:+ExplicitGCInvokesConcurrent
# Create heap dumps on OOM for postmortem analysis.
-XX:+HeapDumpOnOutOfMemoryError
# Exit the JVM on OOM so orchestration can restart the process.
-XX:+ExitOnOutOfMemoryError
# Cap NIO direct buffer cache to limit retained off-heap memory.
-Djdk.nio.maxCachedBufferSize=2000000
# Allow self-attach for profilers (e.g., async-profiler) during debugging.
-Djdk.attach.allowAttachSelf=true
# Open JDK internals for reflection required by Presto and dependencies under Java 11+ modules.
--add-opens=java.base/java.io=ALL-UNNAMED
--add-opens=java.base/java.lang=ALL-UNNAMED
--add-opens=java.base/java.lang.ref=ALL-UNNAMED
--add-opens=java.base/java.lang.reflect=ALL-UNNAMED
--add-opens=java.base/java.net=ALL-UNNAMED
--add-opens=java.base/java.nio=ALL-UNNAMED
--add-opens=java.base/java.security=ALL-UNNAMED
--add-opens=java.base/javax.security.auth=ALL-UNNAMED
--add-opens=java.base/javax.security.auth.login=ALL-UNNAMED
--add-opens=java.base/java.text=ALL-UNNAMED
--add-opens=java.base/java.util=ALL-UNNAMED
--add-opens=java.base/java.util.concurrent=ALL-UNNAMED
--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED
--add-opens=java.base/java.util.regex=ALL-UNNAMED
--add-opens=java.base/jdk.internal.loader=ALL-UNNAMED
--add-opens=java.base/sun.security.action=ALL-UNNAMED
--add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED
