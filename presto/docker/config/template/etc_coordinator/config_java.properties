# Java coordinator configuration. Avoid adding Presto Native-only properties
# here, as they are unsupported by the Java engine and may prevent startup.
# Run this node as the cluster coordinator; it schedules and manages queries.
coordinator=true
# Do not schedule worker tasks on the coordinator to avoid resource contention.
node-scheduler.include-coordinator=false
# Coordinator REST/HTTP port for clients and workers.
http-server.http.port=8080
# Embedded service that provides node discovery for workers.
discovery-server.enabled=true
# Address workers use to register with the discovery service.
discovery.uri=http://presto-coordinator:8080

# Min workers before query starts; keep minimal for quick tests.
query-manager.required-workers=1
# Maximum wait for required workers to join.
query-manager.required-workers-max-wait=10s

# Basic memory configuration settings for Java coordinator
query.max-total-memory-per-node={{ .JavaQueryMaxTotalMemPerNodeGb }}GB
query.max-total-memory={{ mul .JavaQueryMaxTotalMemPerNodeGb .NumberOfWorkers }}GB
query.max-memory-per-node={{ .JavaQueryMaxMemPerNodeGb }}GB
query.max-memory={{ mul .JavaQueryMaxMemPerNodeGb .NumberOfWorkers }}GB

# Reserve heap headroom per node to reduce full GC and OOM risk.
memory.heap-headroom-per-node={{ .HeadroomGb }}GB

# Disable reserved memory pool to simplify test behavior.
experimental.reserved-pool-enabled=false
